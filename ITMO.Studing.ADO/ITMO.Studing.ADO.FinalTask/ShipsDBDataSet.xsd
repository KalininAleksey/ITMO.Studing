<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ShipsDBDataSet" targetNamespace="http://tempuri.org/ShipsDBDataSet.xsd" xmlns:mstns="http://tempuri.org/ShipsDBDataSet.xsd" xmlns="http://tempuri.org/ShipsDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ShipsDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ShipsDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ITMO.Studing.ADO.FinalTask.Properties.Settings.GlobalReference.Default.ShipsDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClassesTableAdapter" GeneratorDataComponentClassName="ClassesTableAdapter" Name="Classes" UserDataComponentName="ClassesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ShipsDBConnectionString (Settings)" DbObjectName="ShipsDB.dbo.Classes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Classes] WHERE (([class] = @Original_class) AND ([type] = @Original_type) AND ([country] = @Original_country) AND ((@IsNull_numGuns = 1 AND [numGuns] IS NULL) OR ([numGuns] = @Original_numGuns)) AND ((@IsNull_bore = 1 AND [bore] IS NULL) OR ([bore] = @Original_bore)) AND ((@IsNull_displacement = 1 AND [displacement] IS NULL) OR ([displacement] = @Original_displacement)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_class" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="class" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_country" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="country" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_numGuns" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="numGuns" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_numGuns" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="numGuns" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_bore" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bore" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Original_bore" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="bore" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_displacement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="displacement" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_displacement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="displacement" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Classes] ([class], [type], [country], [numGuns], [bore], [displacement]) VALUES (@class, @type, @country, @numGuns, @bore, @displacement);
SELECT class, type, country, numGuns, bore, displacement FROM Classes WHERE (class = @class)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@class" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="class" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@country" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="country" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@numGuns" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="numGuns" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@bore" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="bore" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@displacement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="displacement" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT class, type, country, numGuns, bore, displacement FROM dbo.Classes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Classes] SET [class] = @class, [type] = @type, [country] = @country, [numGuns] = @numGuns, [bore] = @bore, [displacement] = @displacement WHERE (([class] = @Original_class) AND ([type] = @Original_type) AND ([country] = @Original_country) AND ((@IsNull_numGuns = 1 AND [numGuns] IS NULL) OR ([numGuns] = @Original_numGuns)) AND ((@IsNull_bore = 1 AND [bore] IS NULL) OR ([bore] = @Original_bore)) AND ((@IsNull_displacement = 1 AND [displacement] IS NULL) OR ([displacement] = @Original_displacement)));
SELECT class, type, country, numGuns, bore, displacement FROM Classes WHERE (class = @class)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@class" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="class" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@country" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="country" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@numGuns" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="numGuns" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@bore" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="bore" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@displacement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="displacement" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_class" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="class" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_country" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="country" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_numGuns" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="numGuns" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_numGuns" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="numGuns" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_bore" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bore" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Original_bore" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="bore" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_displacement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="displacement" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_displacement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="displacement" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="class" DataSetColumn="class" />
              <Mapping SourceColumn="type" DataSetColumn="type" />
              <Mapping SourceColumn="country" DataSetColumn="country" />
              <Mapping SourceColumn="numGuns" DataSetColumn="numGuns" />
              <Mapping SourceColumn="bore" DataSetColumn="bore" />
              <Mapping SourceColumn="displacement" DataSetColumn="displacement" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RegisterTableAdapter" GeneratorDataComponentClassName="RegisterTableAdapter" Name="Register" UserDataComponentName="RegisterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ShipsDBConnectionString (Settings)" DbObjectName="ShipsDB.dbo.Register" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Register] ([LoginUser], [PasswordUser]) VALUES (@LoginUser, @PasswordUser)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LoginUser" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LoginUser" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PasswordUser" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PasswordUser" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDUser, LoginUser, PasswordUser FROM dbo.Register</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDUser" DataSetColumn="IDUser" />
              <Mapping SourceColumn="LoginUser" DataSetColumn="LoginUser" />
              <Mapping SourceColumn="PasswordUser" DataSetColumn="PasswordUser" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ShipsDBConnectionString (Settings)" DbObjectName="ShipsDB.dbo.Register" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDUser, LoginUser, PasswordUser FROM dbo.Register
Where LoginUser='{LoginTextBox.Text}' and PasswordUser='{PasswordTextBox.Text}'</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ShipsTableAdapter" GeneratorDataComponentClassName="ShipsTableAdapter" Name="Ships" UserDataComponentName="ShipsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ShipsDBConnectionString (Settings)" DbObjectName="ShipsDB.dbo.Ships" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Ships] WHERE (([name] = @Original_name) AND ([class] = @Original_class) AND ((@IsNull_launched = 1 AND [launched] IS NULL) OR ([launched] = @Original_launched)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_class" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="class" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_launched" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="launched" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_launched" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="launched" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Ships] ([name], [class], [launched]) VALUES (@name, @class, @launched);
SELECT name, class, launched FROM Ships WHERE (name = @name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@class" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="class" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@launched" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="launched" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT name, class, launched FROM dbo.Ships</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Ships] SET [name] = @name, [class] = @class, [launched] = @launched WHERE (([name] = @Original_name) AND ([class] = @Original_class) AND ((@IsNull_launched = 1 AND [launched] IS NULL) OR ([launched] = @Original_launched)));
SELECT name, class, launched FROM Ships WHERE (name = @name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@class" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="class" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@launched" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="launched" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_class" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="class" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_launched" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="launched" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_launched" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="launched" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="class" DataSetColumn="class" />
              <Mapping SourceColumn="launched" DataSetColumn="launched" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BattlesTableAdapter" GeneratorDataComponentClassName="BattlesTableAdapter" Name="Battles" UserDataComponentName="BattlesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ShipsDBConnectionString (Settings)" DbObjectName="ShipsDB.dbo.Battles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Battles] WHERE (([name] = @Original_name) AND ([date] = @Original_date))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Battles] ([name], [date]) VALUES (@name, @date);
SELECT name, date FROM Battles WHERE (name = @name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT name, date FROM dbo.Battles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Battles] SET [name] = @name, [date] = @date WHERE (([name] = @Original_name) AND ([date] = @Original_date));
SELECT name, date FROM Battles WHERE (name = @name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="date" DataSetColumn="date" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OutcomesTableAdapter" GeneratorDataComponentClassName="OutcomesTableAdapter" Name="Outcomes" UserDataComponentName="OutcomesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ShipsDBConnectionString (Settings)" DbObjectName="ShipsDB.dbo.Outcomes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Outcomes] WHERE (([ship] = @Original_ship) AND ([battle] = @Original_battle) AND ([result] = @Original_result))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ship" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ship" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_battle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="battle" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_result" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="result" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Outcomes] ([ship], [battle], [result]) VALUES (@ship, @battle, @result);
SELECT ship, battle, result FROM Outcomes WHERE (battle = @battle) AND (ship = @ship)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ship" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ship" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@battle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="battle" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@result" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="result" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ship, battle, result FROM dbo.Outcomes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Outcomes] SET [ship] = @ship, [battle] = @battle, [result] = @result WHERE (([ship] = @Original_ship) AND ([battle] = @Original_battle) AND ([result] = @Original_result));
SELECT ship, battle, result FROM Outcomes WHERE (battle = @battle) AND (ship = @ship)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ship" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ship" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@battle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="battle" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@result" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="result" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ship" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ship" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_battle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="battle" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_result" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="result" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ship" DataSetColumn="ship" />
              <Mapping SourceColumn="battle" DataSetColumn="battle" />
              <Mapping SourceColumn="result" DataSetColumn="result" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ShipsDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ShipsDBDataSet" msprop:Generator_UserDSName="ShipsDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Classes" msprop:Generator_TableClassName="ClassesDataTable" msprop:Generator_TableVarName="tableClasses" msprop:Generator_TablePropName="Classes" msprop:Generator_RowDeletingName="ClassesRowDeleting" msprop:Generator_RowChangingName="ClassesRowChanging" msprop:Generator_RowEvHandlerName="ClassesRowChangeEventHandler" msprop:Generator_RowDeletedName="ClassesRowDeleted" msprop:Generator_UserTableName="Classes" msprop:Generator_RowChangedName="ClassesRowChanged" msprop:Generator_RowEvArgName="ClassesRowChangeEvent" msprop:Generator_RowClassName="ClassesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="class" msprop:Generator_ColumnVarNameInTable="columnclass" msprop:Generator_ColumnPropNameInRow="_class" msprop:Generator_ColumnPropNameInTable="classColumn" msprop:Generator_UserColumnName="class">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="type" msprop:Generator_ColumnVarNameInTable="columntype" msprop:Generator_ColumnPropNameInRow="type" msprop:Generator_ColumnPropNameInTable="typeColumn" msprop:Generator_UserColumnName="type">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="country" msprop:Generator_ColumnVarNameInTable="columncountry" msprop:Generator_ColumnPropNameInRow="country" msprop:Generator_ColumnPropNameInTable="countryColumn" msprop:Generator_UserColumnName="country">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="numGuns" msprop:Generator_ColumnVarNameInTable="columnnumGuns" msprop:Generator_ColumnPropNameInRow="numGuns" msprop:Generator_ColumnPropNameInTable="numGunsColumn" msprop:Generator_UserColumnName="numGuns" type="xs:unsignedByte" minOccurs="0" />
              <xs:element name="bore" msprop:Generator_ColumnVarNameInTable="columnbore" msprop:Generator_ColumnPropNameInRow="bore" msprop:Generator_ColumnPropNameInTable="boreColumn" msprop:Generator_UserColumnName="bore" type="xs:float" minOccurs="0" />
              <xs:element name="displacement" msprop:Generator_ColumnVarNameInTable="columndisplacement" msprop:Generator_ColumnPropNameInRow="displacement" msprop:Generator_ColumnPropNameInTable="displacementColumn" msprop:Generator_UserColumnName="displacement" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Register" msprop:Generator_TableClassName="RegisterDataTable" msprop:Generator_TableVarName="tableRegister" msprop:Generator_TablePropName="Register" msprop:Generator_RowDeletingName="RegisterRowDeleting" msprop:Generator_RowChangingName="RegisterRowChanging" msprop:Generator_RowEvHandlerName="RegisterRowChangeEventHandler" msprop:Generator_RowDeletedName="RegisterRowDeleted" msprop:Generator_UserTableName="Register" msprop:Generator_RowChangedName="RegisterRowChanged" msprop:Generator_RowEvArgName="RegisterRowChangeEvent" msprop:Generator_RowClassName="RegisterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDUser" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIDUser" msprop:Generator_ColumnPropNameInRow="IDUser" msprop:Generator_ColumnPropNameInTable="IDUserColumn" msprop:Generator_UserColumnName="IDUser" type="xs:int" />
              <xs:element name="LoginUser" msprop:Generator_ColumnVarNameInTable="columnLoginUser" msprop:Generator_ColumnPropNameInRow="LoginUser" msprop:Generator_ColumnPropNameInTable="LoginUserColumn" msprop:Generator_UserColumnName="LoginUser">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PasswordUser" msprop:Generator_ColumnVarNameInTable="columnPasswordUser" msprop:Generator_ColumnPropNameInRow="PasswordUser" msprop:Generator_ColumnPropNameInTable="PasswordUserColumn" msprop:Generator_UserColumnName="PasswordUser">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Ships" msprop:Generator_TableClassName="ShipsDataTable" msprop:Generator_TableVarName="tableShips" msprop:Generator_TablePropName="Ships" msprop:Generator_RowDeletingName="ShipsRowDeleting" msprop:Generator_RowChangingName="ShipsRowChanging" msprop:Generator_RowEvHandlerName="ShipsRowChangeEventHandler" msprop:Generator_RowDeletedName="ShipsRowDeleted" msprop:Generator_UserTableName="Ships" msprop:Generator_RowChangedName="ShipsRowChanged" msprop:Generator_RowEvArgName="ShipsRowChangeEvent" msprop:Generator_RowClassName="ShipsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="class" msprop:Generator_ColumnVarNameInTable="columnclass" msprop:Generator_ColumnPropNameInRow="_class" msprop:Generator_ColumnPropNameInTable="classColumn" msprop:Generator_UserColumnName="class">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="launched" msprop:Generator_ColumnVarNameInTable="columnlaunched" msprop:Generator_ColumnPropNameInRow="launched" msprop:Generator_ColumnPropNameInTable="launchedColumn" msprop:Generator_UserColumnName="launched" type="xs:short" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Battles" msprop:Generator_TableClassName="BattlesDataTable" msprop:Generator_TableVarName="tableBattles" msprop:Generator_TablePropName="Battles" msprop:Generator_RowDeletingName="BattlesRowDeleting" msprop:Generator_RowChangingName="BattlesRowChanging" msprop:Generator_RowEvHandlerName="BattlesRowChangeEventHandler" msprop:Generator_RowDeletedName="BattlesRowDeleted" msprop:Generator_UserTableName="Battles" msprop:Generator_RowChangedName="BattlesRowChanged" msprop:Generator_RowEvArgName="BattlesRowChangeEvent" msprop:Generator_RowClassName="BattlesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="date" msprop:Generator_ColumnVarNameInTable="columndate" msprop:Generator_ColumnPropNameInRow="date" msprop:Generator_ColumnPropNameInTable="dateColumn" msprop:Generator_UserColumnName="date" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Outcomes" msprop:Generator_TableClassName="OutcomesDataTable" msprop:Generator_TableVarName="tableOutcomes" msprop:Generator_TablePropName="Outcomes" msprop:Generator_RowDeletingName="OutcomesRowDeleting" msprop:Generator_RowChangingName="OutcomesRowChanging" msprop:Generator_RowEvHandlerName="OutcomesRowChangeEventHandler" msprop:Generator_RowDeletedName="OutcomesRowDeleted" msprop:Generator_UserTableName="Outcomes" msprop:Generator_RowChangedName="OutcomesRowChanged" msprop:Generator_RowEvArgName="OutcomesRowChangeEvent" msprop:Generator_RowClassName="OutcomesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ship" msprop:Generator_ColumnVarNameInTable="columnship" msprop:Generator_ColumnPropNameInRow="ship" msprop:Generator_ColumnPropNameInTable="shipColumn" msprop:Generator_UserColumnName="ship">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="battle" msprop:Generator_ColumnVarNameInTable="columnbattle" msprop:Generator_ColumnPropNameInRow="battle" msprop:Generator_ColumnPropNameInTable="battleColumn" msprop:Generator_UserColumnName="battle">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="result" msprop:Generator_ColumnVarNameInTable="columnresult" msprop:Generator_ColumnPropNameInRow="result" msprop:Generator_ColumnPropNameInTable="resultColumn" msprop:Generator_UserColumnName="result">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Classes" />
      <xs:field xpath="mstns:class" />
    </xs:unique>
    <xs:unique name="Ships_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Ships" />
      <xs:field xpath="mstns:name" />
    </xs:unique>
    <xs:unique name="Battles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Battles" />
      <xs:field xpath="mstns:name" />
    </xs:unique>
    <xs:unique name="Outcomes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Outcomes" />
      <xs:field xpath="mstns:ship" />
      <xs:field xpath="mstns:battle" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Ships_Classes" msdata:parent="Classes" msdata:child="Ships" msdata:parentkey="class" msdata:childkey="class" msprop:Generator_UserChildTable="Ships" msprop:Generator_ChildPropName="GetShipsRows" msprop:Generator_UserRelationName="FK_Ships_Classes" msprop:Generator_ParentPropName="ClassesRow" msprop:Generator_RelationVarName="relationFK_Ships_Classes" msprop:Generator_UserParentTable="Classes" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>